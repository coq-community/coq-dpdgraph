#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#            This file is part of the DpdGraph tools.
#  Copyright (C) 2009-2017 Anne Pacalet (Anne.Pacalet@free.fr)
#                      and Yves Bertot (Yves.Bertot@inria.fr)
#                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#      This file is distributed under the terms of the
#       GNU Lesser General Public License Version 2.1
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# the script generated by autoconf from this input
# will set several variables: (see AC_SUBST at the end of this file)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

AC_INIT(coq-dpdgraph,1.0-8.13)
AC_MSG_NOTICE(AC_PACKAGE_NAME version AC_PACKAGE_VERSION)

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
new_section() {
  title="~~ $1  "
  banner=$(echo "$title" | sed -e 's/./~/g')
  AC_MSG_NOTICE($banner)
  AC_MSG_NOTICE($title)
  AC_MSG_NOTICE($banner)
}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
new_section "OCaml compilers"

AC_CHECK_PROG(OCAMLC,ocamlc,ocamlc,no)
if test "$OCAMLC" = no ; then
  AC_MSG_ERROR(Cannot find ocamlc.)
fi

AC_MSG_CHECKING(ocamlc version)
OCAMLVERSION=$($OCAMLC -version)
AC_MSG_RESULT($OCAMLVERSION)
case $OCAMLVERSION in
  0.*|1.*|2.*|3.*)
    AC_MSG_ERROR(AC_PACKAGE_NAME needs ocaml version 4.00.0 or higher)
    ;;
esac

AC_MSG_CHECKING(ocamlc -safe-string option)
case $OCAMLVERSION in
  4.00.*|4.01.*)
    AC_MSG_RESULT(no)
    ;;
  *)
    OCAML_EXTRA_OPTS="-safe-string"; AC_MSG_RESULT(yes)
    ;;
esac

AC_MSG_CHECKING(ocaml library path)
OCAMLLIB=$($OCAMLC -where | tr -d '\r')
AC_MSG_RESULT($OCAMLLIB)

# then we look for ocamlopt; if not present, we issue a warning
# if the version is not the same, we also discard it
# we set OCAMLBEST to "opt" or "byte", whether ocamlopt is available or not
AC_CHECK_PROG(OCAMLOPT,ocamlopt,ocamlopt,no)
OCAMLBEST=byte
if test "$OCAMLOPT" = no ; then
  AC_MSG_WARN(cannot find ocamlopt; bytecode compilation only.)
else
  AC_MSG_CHECKING(ocamlopt version)
  TMPVERSION=$($OCAMLOPT -version)
  if test "$TMPVERSION" != "$OCAMLVERSION" ; then
    AC_MSG_RESULT($TMPVERSION)
    AC_MSG_WARN(version differs from ocamlc; ocamlopt discarded.)
    OCAMLOPT=no
  else
    AC_MSG_RESULT(ok)
    OCAMLBEST=opt
  fi
fi

AC_CHECK_PROG(OCAMLCDOTOPT,ocamlc.opt,ocamlc.opt,no)
if test "$OCAMLCDOTOPT" != no ; then
  AC_MSG_CHECKING(ocamlc.opt version)
  TMPVERSION=$($OCAMLCDOTOPT -version)
  if test "$TMPVERSION" != "$OCAMLVERSION" ; then
    AC_MSG_RESULT($TMPVERSION)
    AC_MSG_WARN(version differs from ocamlc; ocamlc.opt discarded.)
  else
    AC_MSG_RESULT(ok)
    OCAMLC=$OCAMLCDOTOPT
  fi
fi

AC_CHECK_PROG(OCAMLOPTDOTOPT,ocamlopt.opt,ocamlopt.opt,no)
if test "$OCAMLOPTDOTOPT" != no ; then
  AC_MSG_CHECKING(ocamlc.opt version)
  TMPVERSION=$($OCAMLOPTDOTOPT -version)
  if test "$TMPVERSION" != "$OCAMLVERSION" ; then
    AC_MSG_RESULT($TMPVERSION)
    AC_MSG_WARN(version differs from ocamlc; ocamlopt.opt discarded.)
  else
    AC_MSG_RESULT(ok)
    OCAMLOPT=$OCAMLOPTDOTOPT
  fi
fi

# ocamldep, ocamllex and ocamlyacc should also be present in the path
AC_CHECK_PROG(OCAMLDEP,ocamldep,ocamldep,no)
if test "$OCAMLDEP" = no ; then
  AC_MSG_ERROR(Cannot find ocamldep.)
fi

AC_CHECK_PROG(OCAMLLEX,ocamllex,ocamllex,no)
if test "$OCAMLLEX" = no ; then
  AC_MSG_ERROR(Cannot find ocamllex.)
else
  AC_CHECK_PROG(OCAMLLEXDOTOPT,ocamllex.opt,ocamllex.opt,no)
  if test "$OCAMLLEXDOTOPT" != no ; then
    OCAMLLEX=$OCAMLLEXDOTOPT
  fi
fi

AC_CHECK_PROG(OCAMLYACC,ocamlyacc,ocamlyacc,no)
if test "$OCAMLYACC" = no ; then
  AC_MSG_ERROR(Cannot find ocamlyacc.)
fi

AC_CHECK_PROG(OCAMLDOC,ocamldoc,ocamldoc,true)
if test "$OCAMLDOC" = true ; then
  AC_MSG_WARN(Cannot find ocamldoc)
else
  AC_CHECK_PROG(OCAMLDOCOPT,ocamldoc.opt,ocamldoc.opt,no)
  if test "$OCAMLDOCOPT" != no ; then
    OCAMLDOC=$OCAMLDOCOPT
  fi
fi

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
new_section "ocamlgraph"

AC_CHECK_PROG(OCAMLFIND,ocamlfind,ocamlfind,no)
if test "$OCAMLFIND" = "no" ; then
  AC_MSG_WARN(No ocamlfind detected)
else
  AC_MSG_CHECKING(ocamlfind compatibility)
  OCAMLLIB_BY_FINDLIB=$(ocamlfind printconf stdlib | tr -d '\r')
  if test "$OCAMLLIB_BY_FINDLIB" = "$OCAMLLIB" ; then
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
    AC_MSG_WARN(ocamlfind detected but disabled. Standard libraries differ:)
    echo "  ocamlc: '$OCAMLLIB'"
    echo "  ocamlfind: '$OCAMLLIB_BY_FINDLIB'"
    OCAMLFIND="no"
  fi
fi

AC_MSG_CHECKING(ocamlgraph package)
if test "$OCAMLFIND" = "no"; then
  if test -f "$OCAMLLIB/ocamlgraph/graph.cmxa" ; then
    OCAMLGRAPH=yes
  else
    OCAMLGRAPH=no
  fi
  OCAMLGRAPH_PATH=+ocamlgraph
else
  OCAMLGRAPH_PATH=$(ocamlfind query ocamlgraph | tr -d '\r')
  if test "$OCAMLGRAPH_PATH" = "" ;then
    OCAMLGRAPH=no
  fi
fi

if test "$OCAMLGRAPH" = no ; then
  AC_MSG_RESULT(no)
  AC_MSG_ERROR(ocamlgraph is not found.)
else
  AC_MSG_RESULT($OCAMLGRAPH_PATH)
fi

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
new_section "Coq"

AC_CHECK_PROG(COQC,coqc,coqc,no)
if test "$COQC" = no ; then
  AC_MSG_ERROR(Cannot find coqc.)
fi

AC_MSG_CHECKING(coq version)
COQVERSION=$($COQC -v | sed -n -e 's|.*version *\(.*\)$|\1|p' )
AC_MSG_RESULT($COQVERSION)

case $COQVERSION in
  8.[[0-9]][[^0-9]]*|8.12*)
    AC_MSG_ERROR(AC_PACKAGE_NAME needs Coq version 8.13 or higher)
    ;;
esac

AC_CHECK_PROG(COQ_MAKEFILE,coq_makefile,coq_makefile,no)
if test "$COQ_MAKEFILE" = no ; then
  AC_MSG_ERROR(cannot find coq_makefile.)
fi

BINDIR_PRE=$(which coqc)
BINDIR=$(dirname $BINDIR_PRE)

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
new_section "creating Makefile"

# substitutions to perform
AC_SUBST(PACKAGE_NAME)
AC_SUBST(PACKAGE_VERSION)

AC_SUBST(OCAMLC)
AC_SUBST(OCAMLOPT)
AC_SUBST(OCAMLDEP)
AC_SUBST(OCAMLLEX)
AC_SUBST(OCAMLYACC)
# AC_SUBST(OCAMLDOC) TODO: use it in Makefile
# AC_SUBST(OCAMLBEST) TODO: use it in Makefile
# AC_SUBST(OCAMLVERSION)
# AC_SUBST(OCAMLLIB)
AC_SUBST(OCAML_EXTRA_OPTS)

AC_SUBST(COQC)
AC_SUBST(COQ_MAKEFILE)

AC_SUBST(BINDIR)
AC_SUBST(OCAMLGRAPH_PATH)

# Finally create the Makefile from Makefile.in
AC_OUTPUT(Makefile)
chmod a-w Makefile

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
